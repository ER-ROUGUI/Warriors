ros2 topic pub /goal_pose geometry_msgs/PoseStamped "{header: {stamp: {sec: 0}, frame_id: 'map'}, pose: {position: {x: 0.2, y: 0.0, z: 0.0}, orientation: {w: 1.0}}}"
import rclpy
from rclpy.node import Node
from geometry_msgs.msg import PoseStamped

class GoalPublisher(Node):

  def __init__(self):
    super().__init__('goal_publisher')
    self.goal_pub = self.create_publisher(PoseStamped, '/goal_pose', 10)  # Queue size: 10 messages
    self.timer = self.create_timer(1.0, self.publish_goal)  # Publish every 1 second

  def publish_goal(self):
    goal_pose = PoseStamped()
    goal_pose.header.stamp.sec = 0  # Set timestamp to 0 seconds
    goal_pose.header.frame_id = 'map'  # Set frame_id to 'map'

    goal_pose.pose.position.x = 0.2  # Set x position to 0.2 meters
    goal_pose.pose.position.y = 0.0  # Set y position to 0.0 meters
    goal_pose.pose.position.z = 0.0  # Set z position to 0.0 meters

    goal_pose.pose.orientation.w = 1.0  # Set orientation to represent no rotation (quaternion)

    self.goal_pub.publish(goal_pose)
    self.get_logger().info('Published goal pose.')

def main():
  rclpy.init()
  goal_publisher = GoalPublisher()
  rclpy.spin(goal_publisher)
  rclpy.shutdown()

if __name__ == '__main__':
  main()
