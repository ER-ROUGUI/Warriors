# Example commands to install RealSense SDK on Raspberry Pi
echo "deb http://realsense-hw-public.s3.amazonaws.com/Debian/apt-repo buster main" | sudo tee /etc/apt/sources.list.d/realsense-public.list
sudo apt-key adv --keyserver keys.gnupg.net --recv-key 6F3EFCDE
sudo apt-get update
sudo apt-get install librealsense2-dkms
sudo apt-get install librealsense2-utils



import pyrealsense2 as rs
import numpy as np
import cv2

def capture_and_save_image(filename='captured_image.png'):
    # Configuration du pipeline de streaming
    pipeline = rs.pipeline()
    config = rs.config()

    # Configurer pour utiliser la couleur de la caméra
    config.enable_stream(rs.stream.color, 640, 480, rs.format.bgr8, 30)

    try:
        # Démarrer le streaming
        pipeline.start(config)

        # Attendre que les images soient disponibles
        for _ in range(30):
            frames = pipeline.wait_for_frames()
            color_frame = frames.get_color_frame()
            if color_frame:
                # Convertir les images en tableau numpy
                color_image = np.asanyarray(color_frame.get_data())

                # Afficher l'image
                cv2.imshow('RealSense', color_image)
                cv2.waitKey(1)

                # Enregistrer l'image
                cv2.imwrite(filename, color_image)
                print(f"Image saved as {filename}")
                break

    finally:
        # Arrêter le streaming
        pipeline.stop()
        cv2.destroyAllWindows()

if __name__ == "__main__":
    capture_and_save_image()


import os
from ament_index_python.packages import get_package_share_directory
from launch import LaunchDescription
from launch_ros.actions import Node
from launch.actions import IncludeLaunchDescription
from launch.launch_description_sources import PythonLaunchDescriptionSource


def generate_launch_description():
    config_dir = os.path.join(get_package_share_directory('navigation_turtlebot'),'config')
    map_file = os.path.join(config_dir,'couloire.yaml')
    param_file = os.path.join(config_dir,'tb3_nav2_params.yaml')
    rviz_config_dir = os.path.join(config_dir,'nav_tb3.rviz')

    return LaunchDescription([
        # IncludeLaunchDescription(
        #     PythonLaunchDescriptionSource([get_package_share_directory('turtlebot3_gazebo'),'/launch','/turtlebot3_world.launch.py'])
        # ),

        IncludeLaunchDescription(
            PythonLaunchDescriptionSource([get_package_share_directory('nav2_bringup'),'/launch','/bringup_launch.py']),
            launch_arguments={
            'map':map_file,
            'params_file': param_file}.items(),

        ),


    Node(
        package='rviz2',
        executable='rviz2',
        name='rviz2_node',
        arguments=['-d', rviz_config_dir],
        output='screen'

        ),
    ])
