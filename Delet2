here the launch file to make navigation with turtlebot real robot sometime it works but sometime it don't 
what i should add or adjust to get the right code and also sometime the maps don't show on rviz , shoud i use map_server 
and also shoud i add a time between etch node in launch file 

import os
from ament_index_python.packages import get_package_share_directory
from launch import LaunchDescription, conditions
from launch_ros.actions import Node
from launch.actions import IncludeLaunchDescription , DeclareLaunchArgument , ExecuteProcess
from launch.launch_description_sources import PythonLaunchDescriptionSource
from launch.substitutions import LaunchConfiguration ,Command


def generate_launch_description():
    config_dir = os.path.join(get_package_share_directory('navigation_turtlebot'),'config')
    map_file = os.path.join(config_dir,'couloire.yaml')
    param_file = os.path.join(config_dir,'tb3_nav2_params.yaml')
    rviz_config_dir = os.path.join(config_dir,'nav_tb3.rviz')
    amcl_param_file =os.path.join(config_dir , 'tb3_nav2_params.yaml')

    urdf_file_dir = os.path.join(get_package_share_directory('turtlebot3_description'), 'urdf', 'turtlebot3_waffle.urdf')

    with open(urdf_file_dir, 'r') as file:
        robot_description_config = file.read()

    return LaunchDescription([

        DeclareLaunchArgument(
            'use_sim_time',
            default_value='false',
            description='use simulation gazebo clock if true'
        ),
  

        IncludeLaunchDescription(
            PythonLaunchDescriptionSource([get_package_share_directory('nav2_bringup'),'/launch','/bringup_launch.py']),
            launch_arguments={
            'map':map_file,
            'params_file': param_file}.items(),

        ),

    Node(
        package='robot_state_publisher',
        executable='robot_state_publisher',
        name='robot_state_publisher',
        output='both',
        parameters=[{'robot_description': robot_description_config , 'use_sim_time': False}]
        # parameters=[{'robot_description': Command(['xacro', LaunchConfiguration('model')])}],
        
    ),

    Node(
        package='rviz2',
        executable='rviz2',
        name='rviz2_node',
        arguments=['-d', rviz_config_dir],
        output='screen'

        ),
    Node(
    package='nav2_amcl',
    executable='amcl',
    name='amcl',
    parameters = [amcl_param_file, {'use_sim_time' : LaunchConfiguration('use_sim_time')}],

    output='screen'

    ),

    # lifecycle manager >>>> to localize the robot
    ExecuteProcess(
        cmd=['ros2' , 'run' , 'nav2_util', 'lifecycle_bringup', 'amcl']
    )
    ])
