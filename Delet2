i use this code 

import rclpy
from rclpy.node import Node
from sensor_msgs.msg import Image
from std_msgs.msg import String
from cv_bridge import CvBridge
import cv2
from ultralytics import YOLO  



class ImagePublisher(Node):
    def __init__(self):
        super().__init__('image_publisher_Q18')
        self.publisher_ = self.create_publisher(String, '/detection_info', 10)
        self.bridge = CvBridge()

        self.cap = cv2.VideoCapture('rtsp://192.168.10.128/D67A352BADCA434D3574A552880231CF&1')  
     
        model_file = "/app/augmented-robots/data_image/yolov8n_custom/yolov8m_custom.pt"
        self.model = YOLO(model_file)

        self.timer_period = 0.1 
        self.timer = self.create_timer(self.timer_period, self.timer_callback)

    def timer_callback(self):
        ret, frame = self.cap.read()
        if not ret:
            return
        
        results = self.model(frame)
        results = self.model.predict(source=frame, show=True, stream=True, verbose=False)


        for resu in results:
            boxes = resu.boxes

            for box in boxes:

                x1, y1, x2, y2 = box.xyxy[0]
                confidence =box.conf[0]
                cls = int(box.cls[0])

                class_name = self.model.names[cls]

                if class_name == "OpenDoor" and confidence > 0.5 : # we can use door open/closed or window instead person !!! (collect data)
                    
                    cv2.rectangle(frame , (int(x1),int(y1)) , (int(x2) , int(y2)) , (0,255,0) , 2)


                    (x_center,y_center) = (x2 + x1)/2, (y2+y1)/2 
                    center_coordinates = (int(x_center),int(y_center))

                    text = f"The {class_name} has been detected"
                    text_position = (int(x1) , int(y1)-10)
                    cv2.putText(frame , text, text_position ,cv2.FONT_HERSHEY_SIMPLEX, 0.5 , (0,255,0) , 2)
                

                    message = f'Detected {class_name} with confidence {confidence:.2f}'
                    self.publisher_.publish(String(data=message))
        
     
        cv2.imshow('YOLOv8 Detection', cv2.cvtColor(frame, cv2.COLOR_BGR2RGB))
        cv2.waitKey(1)

def main(args=None):
    rclpy.init(args=args)
    node = ImagePublisher()
    rclpy.spin(node)
    node.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()
