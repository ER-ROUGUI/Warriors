import os
from ament_index_python.packages import get_package_share_directory
from launch import LaunchDescription
from launch_ros.actions import Node
from launch.actions import IncludeLaunchDescription , DeclareLaunchArgument , ExecuteProcess
from launch.launch_description_sources import PythonLaunchDescriptionSource
from launch.substitutions import LaunchConfiguration


def generate_launch_description():
    config_dir = os.path.join(get_package_share_directory('navigation_turtlebot'),'config')
    map_file = os.path.join(config_dir,'couloire.yaml')
    param_file = os.path.join(config_dir,'tb3_nav2_params.yaml')
    rviz_config_dir = os.path.join(config_dir,'nav_tb3.rviz')
    amcl_param_file =os.path.join(config_dir , 'tb3_nav2_params.yaml')

    return LaunchDescription([

        DeclareLaunchArgument(
            'use_sim_time',
            default_value='false',
            description='use simulation gazebo clock if true'
        ),
  

        IncludeLaunchDescription(
            PythonLaunchDescriptionSource([get_package_share_directory('nav2_bringup'),'/launch','/bringup_launch.py']),
            launch_arguments={
            'map':map_file,
            'params_file': param_file}.items(),

        ),


    Node(
        package='rviz2',
        executable='rviz2',
        name='rviz2_node',
        arguments=['-d', rviz_config_dir],
        output='screen'

        ),
    Node(
    package='nav2_amcl',
    executable='amcl',
    name='amcl',
    parameters = [amcl_param_file, {'use_sim_time' : LaunchConfiguration('use_sim_time')}],

    output='screen'

    ),

    # lifecycle manager >>>> to localize the robot
    ExecuteProcess(
        cmd=['ros2' , 'run' , 'nav2_util', 'lifecycle_bringup', 'amcl']
    )
    ])
