here 

import rclpy
from rclpy.node import Node
import paho.mqtt.client as mqtt
import yaml
import json
import os
from geometry_msgs.msg import PoseStamped
from nav2_simple_commander.robot_navigator import BasicNavigator, TaskResult

class MQTTROS2Navigator(Node):
    def __init__(self):
        super().__init__('mqtt_ros2_navigator')
        # self.config = self.load_config(config_file)
        self.navigator = BasicNavigator()

        # Setup MQTT client
        self.mqtt_client = mqtt.Client()
        self.mqtt_client.on_connect = self.on_connect
        self.mqtt_client.on_message = self.on_message
        self.mqtt_client.username_pw_set("ros2" , "niceiam21!")
        self.mqtt_client.connect("localhost", 1883, 60)
        self.mqtt_client.loop_start()

        # Initialize navigator
        self.init_navigator()

    # def load_config(self, filename):
    #     base_path = os.path.dirname(__file__)
    #     config_path = os.path.join(base_path, 'config', filename)
    #     with open(config_path, 'r') as file:
    #         return yaml.safe_load(file)

    def on_connect(self, client, userdata, flags, rc):
        print(f"Connected with result code {rc}")
        client.subscribe("/suspicious")

    def on_message(self, client, userdata, msg):
        message = msg.payload.decode("utf-8")
        self.process_message(message)

    def init_navigator(self):
        self.navigator.lifecycleStartup()
        self.navigator.waitUntilNav2Active()

    def process_message(self, message):
        try:
            data = json.loads(message)
            if data == "navigate":
                self.set_goal()
        except json.JSONDecodeError as e:
            print(f"Error decoding JSON: {e}")

    def set_goal(self):
        initial_pose = PoseStamped()
        initial_pose.header.frame_id = 'map'
        initial_pose.header.stamp = self.navigator.get_clock().now().to_msg()
        initial_pose.pose.position.x = 1.2699
        initial_pose.pose.position.y = 1.3442
        initial_pose.pose.orientation.z = -0.984
        initial_pose.pose.orientation.w = 0.1759
        self.navigator.setInitialPose(initial_pose)

        goal_pose = PoseStamped()
        goal_pose.header.frame_id = 'map'
        goal_pose.header.stamp = self.navigator.get_clock().now().to_msg()
        goal_pose.pose.position.x = 2.0
        goal_pose.pose.position.y = 1.0
        goal_pose.pose.orientation.w = 0.95

        path = self.navigator.getPath(initial_pose, goal_pose)
        smoothed_path = self.navigator.smoothPath(path)

        # Follow path
        self.navigator.followPath(smoothed_path)

        i = 0
        while not self.navigator.isTaskComplete():

            i += 1
            feedback = self.navigator.getFeedback()
            if feedback and i % 5 == 0:
                print(
                    'Estimated distance remaining to goal position: '
                    + '{0:.3f}'.format(feedback.distance_to_goal)
                    + '\nCurrent speed of the robot: '
                    + '{0:.3f}'.format(feedback.speed)
                )

        # Do something depending on the return code
        result = self.navigator.getResult()
        if result == TaskResult.SUCCEEDED:
            print('Goal succeeded!')
        elif result == TaskResult.CANCELED:
            print('Goal was canceled!')
        elif result == TaskResult.FAILED:
            print('Goal failed!')
        else:
            print('Goal has an invalid return status!')

        self.navigator.lifecycleShutdown()

        exit(0)

def main(args=None):
    rclpy.init(args=args)
    navigator = MQTTROS2Navigator()
    rclpy.spin(navigator)
    navigator.cleanup()
    rclpy.shutdown()

if __name__ == '__main__':
    main()

i get this error 

Connected with result code 0
[INFO] [1715870998.799108865] [basic_navigator]: Starting up lifecycle nodes based on lifecycle_manager.
[INFO] [1715870998.806862772] [basic_navigator]: Starting up /lifecycle_manager_localization/manage_nodes
[INFO] [1715870998.826432411] [basic_navigator]: Starting up /lifecycle_manager_navigation/manage_nodes
[INFO] [1715870998.840690608] [basic_navigator]: Nav2 is ready for use!
[INFO] [1715871002.884435975] [basic_navigator]: Nav2 is ready for use!
Error decoding JSON: Expecting value: line 1 column 1 (char 0)
Error decoding JSON: Expecting value: line 1 column 1 (char 0)
Error decoding JSON: Expecting value: line 1 column 1 (char 0)


when i send mosquitto_pub -h localhost -t /suspicious -m "navigate" -u ros2 -P niceiam21!
